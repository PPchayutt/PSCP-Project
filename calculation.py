"""‡πÄ‡∏Å‡πá‡∏ö‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"""

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏≠‡∏≤‡∏¢‡∏∏‡∏Ç‡∏≠‡∏á‡∏™‡∏±‡∏ï‡∏ß‡πå
def dog_to_human_age(dog_age):
    """‡πÅ‡∏õ‡∏•‡∏á‡∏≠‡∏≤‡∏¢‡∏∏‡∏™‡∏∏‡∏ô‡∏±‡∏Ç"""
    if dog_age <= 2:
        return dog_age * 10.5
    else:
        return 21 + (dog_age - 2) * 4

def cat_to_human_age(cat_age):
    """‡πÅ‡∏õ‡∏•‡∏á‡∏≠‡∏≤‡∏¢‡∏∏‡πÅ‡∏°‡∏ß"""
    age_table = {
        0: 0, 1: 15, 2: 24, 3: 28, 4: 32, 5: 36, 6: 40, 7: 44, 8: 48, 9: 52, 10: 56,
        11: 60, 12: 64, 13: 68, 14: 72, 15: 76, 16: 80, 17: 84, 18: 88,
        19: 92, 20: 96, 21: 100, 22: 104, 23: 108, 24: 112, 25: 116
    }
    return age_table.get(cat_age, 116)

def bunny_to_human_age(bunny_age):
    """‡πÅ‡∏õ‡∏•‡∏á‡∏≠‡∏≤‡∏¢‡∏∏‡∏Å‡∏£‡∏∞‡∏ï‡πà‡∏≤‡∏¢"""
    age_table = {
        0: 0, 1: 21, 2: 27, 3: 33, 4: 39, 5: 45, 6: 51, 7: 57, 8: 63, 9: 69,
        10: 75, 11: 81, 12: 87, 13: 93, 14: 99, 15: 105, 16: 110
    }
    return age_table.get(bunny_age, 110)

def hamster_to_human_age(hamster_age):
    """‡πÅ‡∏õ‡∏•‡∏á‡∏≠‡∏≤‡∏¢‡∏∏‡πÅ‡∏Æ‡∏°‡∏™‡πÄ‡∏ï‡∏≠‡∏£‡πå"""
    age_table = {
        0: 0,
        1: 41,
        1.5: 52.5,
        2: 63.5,
        2.5: 74.5,
        3: 80
    }
    closest_age = min(age_table.keys(), key=lambda x: abs(x - hamster_age))
    return age_table[closest_age]

def hedgehog_to_human_age(hedgehog_age):
    """‡πÅ‡∏õ‡∏•‡∏á‡∏≠‡∏≤‡∏¢‡∏∏‡πÄ‡∏°‡πà‡∏ô"""
    age_table = {
        0: 0,
        1.17: 30,
        3: 40,
        3.5: 50,
        3.67: 60,
        4.17: 70,
        5.33: 80,
        6.17: 90,
        7.67: 100
    }
    closest_age = min(age_table.keys(), key=lambda x: abs(x - hedgehog_age))
    return age_table[closest_age]

def squirrel_to_human_age(squirrel_age):
    """‡πÅ‡∏õ‡∏•‡∏á‡∏≠‡∏≤‡∏¢‡∏∏‡∏Å‡∏£‡∏∞‡∏£‡∏≠‡∏Å"""
    age_table = {
        0: 0, 1: 8.89, 2: 17.78, 3: 26.67, 4: 35.56, 5: 44.45,
        6: 53.34, 7: 62.23, 8: 71.12, 9: 80.01, 10: 88.9,
        11: 97.79, 12: 106.68, 13: 115.57, 14: 124.46, 15: 133.35,
        16: 142.24, 17: 151.13, 18: 160.02, 19: 168.91, 20: 177.8,
        21: 186.69, 22: 195.58, 23: 204.47
    }
    return age_table.get(squirrel_age, 204.47)

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ä‡πà‡∏ß‡∏¢‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏π‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏¢‡∏Ç‡∏≠‡∏á‡∏™‡∏±‡∏ï‡∏ß‡πå
def get_dog_life_stage(age):
    """‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏¢‡∏™‡∏∏‡∏ô‡∏±‡∏Ç"""
    if age < 1:
        return "üêï Puppy (‡πÅ‡∏£‡∏Å‡πÄ‡∏Å‡∏¥‡∏î‡∏ñ‡∏∂‡∏á 1 ‡∏õ‡∏µ)\n‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏¢‡πÄ‡∏î‡πá‡∏Å ‡∏Å‡∏≤‡∏£‡πÄ‡∏à‡∏£‡∏¥‡∏ç‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï‡πÅ‡∏•‡∏∞‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏Å‡∏≤‡∏£‡∏™‡∏π‡∏á"
    elif 1 <= age <= 8:
        return "üêï Adult (1-8 ‡∏õ‡∏µ)\n‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏¢‡∏ú‡∏π‡πâ‡πÉ‡∏´‡∏ç‡πà ‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏£‡∏á‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå"
    else:
        return "üêï Senior (‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 8 ‡∏õ‡∏µ)\n‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏¢‡∏ä‡∏£‡∏≤ ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡πÄ‡∏õ‡πá‡∏ô‡∏û‡∏¥‡πÄ‡∏®‡∏©"

def get_cat_life_stage(age):
    """‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏¢‡πÅ‡∏°‡∏ß"""
    stages = {
        (0, 1): "üê± Kitten (‡πÅ‡∏£‡∏Å‡πÄ‡∏Å‡∏¥‡∏î‡∏ñ‡∏∂‡∏á 1 ‡∏õ‡∏µ)\n‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏¢‡πÄ‡∏î‡πá‡∏Å ‡∏Å‡∏≤‡∏£‡πÄ‡∏à‡∏£‡∏¥‡∏ç‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï‡πÅ‡∏•‡∏∞‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏Å‡∏≤‡∏£‡∏™‡∏π‡∏á",
        (1, 2.5): "üê± Junior (1-2 ‡∏õ‡∏µ)\n‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏¢‡∏£‡∏∏‡πà‡∏ô ‡πÄ‡∏ï‡πá‡∏°‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢‡∏û‡∏•‡∏±‡∏á‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏£‡∏∞‡∏ï‡∏∑‡∏≠‡∏£‡∏∑‡∏≠‡∏£‡πâ‡∏ô",
        (3, 6.5): "üê± Prime (3-6 ‡∏õ‡∏µ)\n‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏¢‡∏ú‡∏π‡πâ‡πÉ‡∏´‡∏ç‡πà ‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏£‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î",
        (7, 10.5): "üê± Mature (7-10 ‡∏õ‡∏µ)\n‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏¢‡∏Å‡∏•‡∏≤‡∏á‡∏Ñ‡∏ô ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏ó‡∏≤‡∏á‡∏£‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏¢",
        (11, 14.5): "üê± Senior (11-14 ‡∏õ‡∏µ)\n‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏¢‡∏™‡∏π‡∏á‡∏≠‡∏≤‡∏¢‡∏∏ ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡πÄ‡∏õ‡πá‡∏ô‡∏û‡∏¥‡πÄ‡∏®‡∏©",
        (15, 100): "üê± Geriatric (15 ‡∏õ‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ)\n‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏¢‡∏ä‡∏£‡∏≤ ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÉ‡∏Å‡∏•‡πâ‡∏ä‡∏¥‡∏î"
    }
    for (min_age, max_age), description in stages.items():
        if min_age <= age < max_age:
            return description
    return stages[(15, 100)]  # ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡πÑ‡∏´‡∏ô‡πÄ‡∏•‡∏¢ ‡πÉ‡∏´‡πâ‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏±‡∏¢‡∏ä‡∏£‡∏≤
